/**
 * @atdoc utility
 * @name cf
 * @category layout
 *
 * @description
 * Clearfix.
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.u-cf:before,
.u-cf:after {
  content: " "; /* 1 */
  display: table; /* 2 */
}

.u-cf:after {
  clear: both;
}

/**
 * @atdoc utility
 * @name nbfc
 *
 * @description
 * New block formatting context.
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.
 *
 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */
.u-nbfc {
  overflow: hidden !important;
}

/**
 * @atdoc utility
 * @name nbfcAlt
 *
 * @description
 * New block formatting context (alternative).
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */
.u-nbfcAlt {
  display: table-cell !important; /* 1 */
  width: 10000px !important; /* 2 */
}

/**
 * @atdoc utility
 * @name overflowHidden
 *
 * @description
 * Hidden overflow.
 */
.u-overflowHidden {
  overflow: hidden;
}

/**
 * @atdoc utility
 * @name overflowAuto
 *
 * @description
 * Auto overflow.
 */
.u-overflowAuto {
  overflow: auto;
}

/**
 * @atdoc utility
 * @name pullLeft
 *
 * @description
 * Float an element to left.
 */
.u-pullLeft {
  float: left !important;
}

/**
 * @atdoc utility
 * @name pullRight
 *
 * @description
 * Float an element to right.
 */
.u-pullRight {
  float: right !important;
}

/**
 * @atdoc utility
 * @name blockCenter
 *
 * @description
 * Horizontally center a block-level element with a specified width.
 */
.u-blockCenter {
  margin-right: auto !important;
  margin-left: auto !important;
}

/**
 * @atdoc utility
 * @name blockRight
 *
 * @description
 * Align a block-level element with a specified width to right.
 */
.u-blockRight {
  margin-left: auto !important;
}

/**
 * @atdoc utility
 * @name flexRow
 */
.u-flexRow {
  flex-direction: row !important;
}

/**
 * @atdoc utility
 * @name flexColumn
 */
.u-flexColumn {
  flex-direction: column !important;
}

/**
 * Vertical alignment depends on an appropriate `display` value. #no-IE9-replace
 */

/**
 * @atdoc utility
 * @name alignTop
 *
 * @description
 * Set vertical alignment to `top`.
 */
.u-alignTop {
  vertical-align: top !important;
}

/**
 * @atdoc utility
 * @name alignMiddle
 *
 * @description
 * Set vertical alignment to `middle`.
 */
.u-alignMiddle {
  vertical-align: middle !important;
}

/**
 * @atdoc utility
 * @name alignBaseline
 *
 * @description
 * Set vertical alignment to `baseline`.
 */
.u-alignBaseline {
  vertical-align: baseline !important;
}

/**
 * @atdoc utility
 * @name alignBottom
 *
 * @description
 * Set vertical alignment to `bottom`.
 */
.u-alignBottom {
  vertical-align: bottom !important;
}
